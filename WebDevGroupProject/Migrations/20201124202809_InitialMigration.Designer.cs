// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebDevGroupProject.Data;

namespace WebDevGroupProject.Migrations
{
    [DbContext(typeof(WebDevGroupProjectContext))]
    [Migration("20201124202809_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebDevGroupProject.Models.Applicant", b =>
                {
                    b.Property<int>("ApplicantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApplicantBirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApplicantCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantMiddleInitial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantPrimaryCitizenship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantStreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EthnicOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HispanicLatino")
                        .HasColumnType("bit");

                    b.HasKey("ApplicantID");

                    b.ToTable("Applicant");
                });

            modelBuilder.Entity("WebDevGroupProject.Models.Application", b =>
                {
                    b.Property<int>("ApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ACT")
                        .HasColumnType("int");

                    b.Property<int?>("ApplicantID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingCVV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingExpiration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CEEBCode")
                        .HasColumnType("int");

                    b.Property<string>("ChurchAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChurchCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChurchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChurchState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChurchZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactRelationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreditCardNumber")
                        .HasColumnType("int");

                    b.Property<int?>("FamilyRoleID")
                        .HasColumnType("int");

                    b.Property<int>("GPA")
                        .HasColumnType("int");

                    b.Property<string>("HighSchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighSchoolTranscriptPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImmunizationFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceCardBackPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceCardFrontPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InterestedInHonors")
                        .HasColumnType("bit");

                    b.Property<string>("MemberID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PastorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PastorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicianName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyGroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyHolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PracticeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PracticePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredMajor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredMinor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProfessionOfFaith")
                        .HasColumnType("bit");

                    b.Property<string>("ProviderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferencePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceRelationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidentialStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SAT")
                        .HasColumnType("int");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpiritualJourney")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationID");

                    b.HasIndex("ApplicantID");

                    b.HasIndex("FamilyRoleID");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("WebDevGroupProject.Models.FamilyRole", b =>
                {
                    b.Property<int>("FamilyRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FamilyRoleID");

                    b.ToTable("FamilyRole");
                });

            modelBuilder.Entity("WebDevGroupProject.Models.Guardian", b =>
                {
                    b.Property<int>("GuardianID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("GuardianEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuardianID");

                    b.HasIndex("ApplicationID");

                    b.ToTable("Guardian");
                });

            modelBuilder.Entity("WebDevGroupProject.Models.PastUniversity", b =>
                {
                    b.Property<int>("PastUniversityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("PastUniversityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PastUniversityTranscriptPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PastUniversityID");

                    b.HasIndex("ApplicationID");

                    b.ToTable("PastUniversity");
                });

            modelBuilder.Entity("WebDevGroupProject.Models.Sibling", b =>
                {
                    b.Property<int>("SiblingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("SiblingAge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiblingFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiblingLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SiblingID");

                    b.HasIndex("ApplicationID");

                    b.ToTable("Sibling");
                });

            modelBuilder.Entity("WebDevGroupProject.ViewModels.BillingViewModel", b =>
                {
                    b.Property<int>("CreditCardNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingCVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("BillingCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingExpiration")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("BillingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingState")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("BillingZip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CreditCardNumber");

                    b.ToTable("BillingViewModel");
                });

            modelBuilder.Entity("WebDevGroupProject.ViewModels.SortedApplicantsReportViewModel", b =>
                {
                    b.Property<int>("ApplicantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GPA")
                        .HasColumnType("float");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicantID");

                    b.ToTable("SortedApplicantsReport");
                });

            modelBuilder.Entity("WebDevGroupProject.Models.Application", b =>
                {
                    b.HasOne("WebDevGroupProject.Models.Applicant", "Applicant")
                        .WithMany()
                        .HasForeignKey("ApplicantID");

                    b.HasOne("WebDevGroupProject.Models.FamilyRole", "FamilyRole")
                        .WithMany()
                        .HasForeignKey("FamilyRoleID");
                });

            modelBuilder.Entity("WebDevGroupProject.Models.Guardian", b =>
                {
                    b.HasOne("WebDevGroupProject.Models.Application", null)
                        .WithMany("Guardians")
                        .HasForeignKey("ApplicationID");
                });

            modelBuilder.Entity("WebDevGroupProject.Models.PastUniversity", b =>
                {
                    b.HasOne("WebDevGroupProject.Models.Application", null)
                        .WithMany("PastUniversities")
                        .HasForeignKey("ApplicationID");
                });

            modelBuilder.Entity("WebDevGroupProject.Models.Sibling", b =>
                {
                    b.HasOne("WebDevGroupProject.Models.Application", null)
                        .WithMany("Siblings")
                        .HasForeignKey("ApplicationID");
                });
#pragma warning restore 612, 618
        }
    }
}
